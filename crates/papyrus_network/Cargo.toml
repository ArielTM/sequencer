[package]
name = "papyrus_network"
version = "0.4.0-rc.0"
edition.workspace = true
repository.workspace = true
license-file.workspace = true

[features]
testing = []

<<<<<<< HEAD
||||||| 7ee04dbc
[[bin]]
name = "streamed_bytes_benchmark"
required-features = ["clap"]
path = "src/bin/streamed_bytes_benchmark.rs"

=======
[[bin]]
name = "streamed_bytes_benchmark"
path = "src/bin/streamed_bytes_benchmark.rs"
required-features = ["clap"]

>>>>>>> origin/main-v0.13.2
[dependencies]
async-stream.workspace = true
bytes.workspace = true
derive_more.workspace = true
futures.workspace = true
lazy_static.workspace = true
libp2p = { workspace = true, features = [
<<<<<<< HEAD
    "gossipsub",
    "identify",
    "kad",
    "macros",
    "noise",
    "quic",
    "serde",
    "tcp",
    "tokio",
    "yamux",
||||||| 7ee04dbc
    "gossipsub",
    "identify",
    "kad",
    "macros",
    "noise",
    "quic",
    "tcp",
    "tokio",
    "yamux",
    "serde",
=======
  "gossipsub",
  "identify",
  "kad",
  "macros",
  "noise",
  "quic",
  "serde",
  "tcp",
  "tokio",
  "yamux",
>>>>>>> origin/main-v0.13.2
] }
metrics.workspace = true
papyrus_common = { path = "../papyrus_common", version = "0.4.0-rc.0" }
papyrus_config = { path = "../papyrus_config", version = "0.4.0-rc.0" }
replace_with.workspace = true
serde = { workspace = true, features = ["derive"] }
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tracing.workspace = true
unsigned-varint = { workspace = true, features = ["std"] }
validator = { workspace = true, features = ["derive"] }


[dev-dependencies]
assert_matches.workspace = true
deadqueue = { workspace = true, features = ["unlimited"] }
defaultmap.workspace = true
libp2p-swarm-test.workspace = true
mockall.workspace = true
pretty_assertions.workspace = true
tokio = { workspace = true, features = ["full", "sync", "test-util"] }
tokio-stream.workspace = true
void.workspace = true
